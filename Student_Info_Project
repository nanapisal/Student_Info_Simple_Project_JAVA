package collection;

import java.util.*;
class Student {
    private int rollNo;
    private String name;
    private double marks;

    public Student(int rollNo, String name, double marks) {
        this.rollNo = rollNo;
        this.name = name;
        this.marks = marks;
    }

    public int getRollNo() { return rollNo; }
    public String getName() { return name; }
    public double getMarks() { return marks; }
    public void setMarks(double marks) { this.marks = marks; }

    @Override
    public String toString() {
        return "Roll No: " + rollNo + ", Name: " + name + ", Marks: " + marks;
    }
}

public class project {
    private static ArrayList<Student> students = new ArrayList<>();
    private static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n===== Student Management System =====");
            System.out.println("1. Add Student");
            System.out.println("2. View Students");
            System.out.println("3. Search Student");
            System.out.println("4. Update Marks");
            System.out.println("5. Delete Student");
            System.out.println("6. Exit");
            System.out.print("Enter choice: ");
            int choice = sc.nextInt();

            switch (choice) {
                case 1 -> addStudent();
                case 2 -> viewStudents();
                case 3 -> searchStudent();
                case 4 -> updateMarks();
                case 5 -> deleteStudent();
                case 6 -> { System.out.println("Exiting..."); return; }
                default -> System.out.println("Invalid choice!");
            }
        }
    }

    private static void addStudent() {
        System.out.print("Enter Roll No: ");
        int rollNo = sc.nextInt();
        sc.nextLine();
        System.out.print("Enter Name: ");
        String name = sc.nextLine();
        System.out.print("Enter Marks: ");
        double marks = sc.nextDouble();

        students.add(new Student(rollNo, name, marks));
        System.out.println("✅ Student added!");
    }

    private static void viewStudents() {
        if (students.isEmpty()) {
            System.out.println("❌ No students found!");
            return;
        }
        for (Student s : students) {
            System.out.println(s);
        }
    }

    private static void searchStudent() {
        System.out.print("Enter Roll No: ");
        int rollNo = sc.nextInt();
        for (Student s : students) {
            if (s.getRollNo() == rollNo) {
                System.out.println("Found: " + s);
                return;
            }
        }
        System.out.println("❌ Student not found!");
    }

    private static void updateMarks() {
        System.out.print("Enter Roll No: ");
        int rollNo = sc.nextInt();
        for (Student s : students) {
            if (s.getRollNo() == rollNo) {
                System.out.print("Enter new marks: ");
                s.setMarks(sc.nextDouble());
                System.out.println("✅ Marks updated!");
                return;
            }
        }
        System.out.println("❌ Student not found!");
    }

    private static void deleteStudent() {
        System.out.print("Enter Roll No: ");
        int rollNo = sc.nextInt();
        Iterator<Student> it = students.iterator();
        while (it.hasNext()) {
            Student s = it.next();
            if (s.getRollNo() == rollNo) {
                it.remove();
                System.out.println("✅ Student deleted!");
                return;
            }
        }
        System.out.println("❌ Student not found!");
    }
}
